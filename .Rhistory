library(EasyEDA)
library(EasyEDA)
args(describe_by_group)
args(describe_by_group)
library(EasyEDA)
args(describe_by_group)
library(EasyEDA)
library(EasyEDA)
args(describe_by_group)
library(EasyEDA)
library(EasyEDA)
library(EasyEDA)
args(describe_by_group)
library(EasyEDA)
library(EasyEDA)
library(EasyEDA)
library(EasyEDA)
library(EasyEDA)
library(EasyEDA)
library(EasyEDA)
#' Generate summary statistics, histogram and boxplots for each numeric column in a dataset.
#'
#' @param data A data.frame or tibble containing the data. The first column is row ids or rownames.
#' @param path A string indicating the directory to save the output files to.
#' @param hist A logical indicating whether to generate histogram for each numeric column.
#' @param boxplot A logical indicating whether to generate boxplot for each numeric column.
#' @return NULL
#' @export
#'
describe_all <- function(data,path,hist=TRUE,boxplot=TRUE,unused=NULL){
# check input arguments
stopifnot(is.data.frame(data), is.character(path))
# create directory if it doesn't exist
if(!dir.exists(path)){
dir.create(path)
}
# initialize empty list to hold summary statistics for each column
summary_stats_all <- list()
for (col in 2:length(data)){
# convert col to column name
col_name <- names(data)[col]
#Calculate summary statistics
summary_stats<-data%>%
summarise(
n=length(!!sym(col_name)),
Mean = mean(!!sym(col_name)),
Median = median(!!sym(col_name)),
Trimmed_Mean = mean(!!sym(col_name), trim = 0.1),
SD = sd(!!sym(col_name)),
Min = min(!!sym(col_name)),
Max = max(!!sym(col_name)),
CV = sd(!!sym(col_name))/mean(!!sym(col_name)),
Range = max(!!sym(col_name)) - min(!!sym(col_name)),
Skewness = skewness(!!sym(col_name)),
Kurtosis = kurtosis(!!sym(col_name))
)
# add column name as first row
summary_stats <- cbind(col_name, summary_stats)
# append summary statistics to list
summary_stats_all[[col_name]] <- summary_stats
# export result to a CSV file
file_name1 <- paste0(col_name,".csv")
file_path1 <- file.path(path, file_name1)
write.csv(summary_stats, file_path1, row.names = FALSE)
}
# combine summary statistics for all columns into a single data frame
summary_stats_all <- do.call(rbind, summary_stats_all)
# export summary statistics for all columns to a CSV file
file_name_all <- paste0("all_summary_stats.csv")
file_path_all <- file.path(path, file_name_all)
write.csv(summary_stats_all, file_path_all, row.names = FALSE)
#Build histograms
if(hist){
#construct plot
for (col in 2:length(data)){
col_name <- names(data)[col]
print(col)
p1 <- ggplot(data = data, aes(x=!!sym(col_name))) +
geom_histogram(color="black", fill="white",binwidth=1) +theme_classic()+
labs(title = paste0("Histogram of ", col_name))
# export graph
file_name2<-paste0(col_name,".jpg")
file_path2<-file.path(path, file_name2)
ggexport(p1,file_path2)
}
}
#Build boxplots
if(boxplot){
#construct plot
for (col in 2:length(data)){
col_name <- names(data)[col]
print(col)
p2 <- ggplot(data = data, aes(x=!!sym(col_name))) +
geom_boxplot(color="black", fill="white")+theme_classic()+
labs(title = paste0("Boxplot of ", col_name))
# export graph
file_name3<-paste0(col_name,".jpg")
file_path3<-file.path(path, file_name3)
ggexport(p2,file_path3)
}
}
# return NULL to indicate success
NULL
}
DS<-c(2,3,1,2,3,5,6,10,25,30,3,5,6,7,8,9,12,34,4,22,21,35,66,28)
PH<-c(100,98,87,89.9,109,111,104,105,95,96,92,91,88,34,67,77,65,66,34,57,112,109,115,92.5)
Group<-c("G1","G2","G3","G4","G2","G1","G3","G4","G4","G3","G2","G1","G1","G4","G3","G2","G1","G3","G4","G2","G2","G1","G3","G1")
dat<-data.frame(Group,DS,PH)
setwd("D:/ML")
describe_all(data=dat,hist=TRUE,boxplot=TRUE,unused=NULL,path="summary_stats_comb")
#' Generate summary statistics, histogram and boxplots for each numeric column in a dataset.
#'
#' @param data A data.frame or tibble containing the data. The first column is row ids or rownames.
#' @param path A string indicating the directory to save the output files to.
#' @param hist A logical indicating whether to generate histogram for each numeric column.
#' @param boxplot A logical indicating whether to generate boxplot for each numeric column.
#' @return NULL
#' @export
#'
describe_all <- function(data,path,hist=TRUE,boxplot=TRUE,unused=NULL){
# check input arguments
stopifnot(is.data.frame(data), is.character(path))
# create directory if it doesn't exist
if(!dir.exists(path)){
dir.create(path)
}
# initialize empty list to hold summary statistics for each column
summary_stats_all <- list()
for (col in 2:length(data)){
# convert col to column name
Trait <- names(data)[col]
#Calculate summary statistics
summary_stats<-data%>%
summarise(
n=length(!!sym(Trait)),
Mean = mean(!!sym(Trait)),
Median = median(!!sym(Trait)),
Trimmed_Mean = mean(!!sym(Trait), trim = 0.1),
SD = sd(!!sym(Trait)),
Min = min(!!sym(Trait)),
Max = max(!!sym(Trait)),
CV = sd(!!sym(Trait))/mean(!!sym(Trait)),
Range = max(!!sym(Trait)) - min(!!sym(Trait)),
Skewness = skewness(!!sym(Trait)),
Kurtosis = kurtosis(!!sym(Trait))
)
# add column name as first row
summary_stats <- cbind(Trait, summary_stats)
# append summary statistics to list
summary_stats_all[[Trait]] <- summary_stats
}
# combine summary statistics for all columns into a single data frame
summary_stats_all <- do.call(rbind, summary_stats_all)
# export summary statistics for all columns to a CSV file
file_name_all <- paste0("all_summary_stats.csv")
file_path_all <- file.path(path, file_name_all)
write.csv(summary_stats_all, file_path_all, row.names = FALSE)
#Build histograms
if(hist){
#construct plot
for (col in 2:length(data)){
Trait <- names(data)[col]
print(col)
p1 <- ggplot(data = data, aes(x=!!sym(Trait))) +
geom_histogram(color="black", fill="grey",binwidth=1) +theme_classic()+
labs(title = paste0("Histogram of ", Trait))
# export graph
file_name2<-paste0(Trait,".jpg")
file_path2<-file.path(path, file_name2)
ggexport(p1,file_path2)
}
}
#Build boxplots
if(boxplot){
#construct plot
for (col in 2:length(data)){
Trait <- names(data)[col]
print(col)
p2 <- ggplot(data = data, aes(x=!!sym(Trait))) +
geom_boxplot(color="black", fill="grey")+theme_classic()+
labs(title = paste0("Boxplot of ", Trait))
# export graph
file_name3<-paste0(Trait,".jpg")
file_path3<-file.path(path, file_name3)
ggexport(p2,file_path3)
}
}
# return NULL to indicate success
NULL
}
describe_all(data=dat,hist=TRUE,boxplot=TRUE,unused=NULL,path="summary_stats_comb")
#' Generate summary statistics, histogram and boxplots for each numeric column in a dataset.
#'
#' @param data A data.frame or tibble containing the data. The first column is row ids or rownames.
#' @param path A string indicating the directory to save the output files to.
#' @param hist A logical indicating whether to generate histogram for each numeric column.
#' @param boxplot A logical indicating whether to generate boxplot for each numeric column.
#' @return NULL
#' @export
#'
describe_all <- function(data,path,hist=TRUE,boxplot=TRUE,unused=NULL){
# check input arguments
stopifnot(is.data.frame(data), is.character(path))
# create directory if it doesn't exist
if(!dir.exists(path)){
dir.create(path)
}
# initialize empty list to hold summary statistics for each column
summary_stats_all <- list()
for (col in 2:length(data)){
# convert col to column name
Trait <- names(data)[col]
#Calculate summary statistics
summary_stats<-data%>%
summarise(
n=length(!!sym(Trait)),
Mean = mean(!!sym(Trait)),
Median = median(!!sym(Trait)),
Trimmed_Mean = mean(!!sym(Trait), trim = 0.1),
SD = sd(!!sym(Trait)),
Min = min(!!sym(Trait)),
Max = max(!!sym(Trait)),
CV = sd(!!sym(Trait))/mean(!!sym(Trait)),
Range = max(!!sym(Trait)) - min(!!sym(Trait)),
SE=std.error(!!sym(Trait)),
Skewness = skewness(!!sym(Trait)),
Kurtosis = kurtosis(!!sym(Trait))
)
# add column name as first row
summary_stats <- cbind(Trait, summary_stats)
# append summary statistics to list
summary_stats_all[[Trait]] <- summary_stats
}
# combine summary statistics for all columns into a single data frame
summary_stats_all <- do.call(rbind, summary_stats_all)
# export summary statistics for all columns to a CSV file
file_name_all <- paste0("all_summary_stats.csv")
file_path_all <- file.path(path, file_name_all)
write.csv(summary_stats_all, file_path_all, row.names = FALSE)
#Build histograms
if(hist){
#construct plot
for (col in 2:length(data)){
Trait <- names(data)[col]
print(col)
p1 <- ggplot(data = data, aes(x=!!sym(Trait))) +
geom_histogram(color="black", fill="grey",binwidth=1) +theme_classic()+
labs(title = paste0("Histogram of ", Trait))
# export graph
file_name2<-paste0(Trait,".jpg")
file_path2<-file.path(path, file_name2)
ggexport(p1,file_path2)
}
}
#Build boxplots
if(boxplot){
#construct plot
for (col in 2:length(data)){
Trait <- names(data)[col]
print(col)
p2 <- ggplot(data = data, aes(x=!!sym(Trait))) +
geom_boxplot(color="black", fill="grey")+theme_classic()+
labs(title = paste0("Boxplot of ", Trait))
# export graph
file_name3<-paste0(Trait,".jpg")
file_path3<-file.path(path, file_name3)
ggexport(p2,file_path3)
}
}
# return NULL to indicate success
NULL
}
describe_all(data=dat,hist=TRUE,boxplot=TRUE,unused=NULL,path="summary_stats_comb")
library(plotrix)
install.packages("plotrix")
library(plotrix)
#' Generate summary statistics, histogram and boxplots for each numeric column in a dataset.
#'
#' @param data A data.frame or tibble containing the data. The first column is row ids or rownames.
#' @param path A string indicating the directory to save the output files to.
#' @param hist A logical indicating whether to generate histogram for each numeric column.
#' @param boxplot A logical indicating whether to generate boxplot for each numeric column.
#' @return NULL
#' @export
#'
describe_all <- function(data,path,hist=TRUE,boxplot=TRUE,unused=NULL){
# check input arguments
stopifnot(is.data.frame(data), is.character(path))
# create directory if it doesn't exist
if(!dir.exists(path)){
dir.create(path)
}
# initialize empty list to hold summary statistics for each column
summary_stats_all <- list()
for (col in 2:length(data)){
# convert col to column name
Trait <- names(data)[col]
#Calculate summary statistics
summary_stats<-data%>%
summarise(
n=length(!!sym(Trait)),
Mean = mean(!!sym(Trait)),
Median = median(!!sym(Trait)),
Trimmed_Mean = mean(!!sym(Trait), trim = 0.1),
SD = sd(!!sym(Trait)),
Min = min(!!sym(Trait)),
Max = max(!!sym(Trait)),
CV = sd(!!sym(Trait))/mean(!!sym(Trait)),
Range = max(!!sym(Trait)) - min(!!sym(Trait)),
SE=std.error(!!sym(Trait)),
Skewness = skewness(!!sym(Trait)),
Kurtosis = kurtosis(!!sym(Trait))
)
# add column name as first row
summary_stats <- cbind(Trait, summary_stats)
# append summary statistics to list
summary_stats_all[[Trait]] <- summary_stats
}
# combine summary statistics for all columns into a single data frame
summary_stats_all <- do.call(rbind, summary_stats_all)
# export summary statistics for all columns to a CSV file
file_name_all <- paste0("all_summary_stats.csv")
file_path_all <- file.path(path, file_name_all)
write.csv(summary_stats_all, file_path_all, row.names = FALSE)
#Build histograms
if(hist){
#construct plot
for (col in 2:length(data)){
Trait <- names(data)[col]
print(col)
p1 <- ggplot(data = data, aes(x=!!sym(Trait))) +
geom_histogram(color="black", fill="grey",binwidth=1) +theme_classic()+
labs(title = paste0("Histogram of ", Trait))
# export graph
file_name2<-paste0(Trait,".jpg")
file_path2<-file.path(path, file_name2)
ggexport(p1,file_path2)
}
}
#Build boxplots
if(boxplot){
#construct plot
for (col in 2:length(data)){
Trait <- names(data)[col]
print(col)
p2 <- ggplot(data = data, aes(x=!!sym(Trait))) +
geom_boxplot(color="black", fill="grey")+theme_classic()+
labs(title = paste0("Boxplot of ", Trait))
# export graph
file_name3<-paste0(Trait,".jpg")
file_path3<-file.path(path, file_name3)
ggexport(p2,file_path3)
}
}
# return NULL to indicate success
NULL
}
describe_all(data=dat,hist=TRUE,boxplot=TRUE,unused=NULL,path="summary_stats_comb")
describe_all(data=dat,hist=TRUE,boxplot=TRUE,unused=NULL,path="summary_stats_comb")
library(EasyEDA)
library(EasyEDA)
library(EasyEDA)
library(EasyEDA)
library(EasyEDA)
library(EasyEDA)
library(EasyEDA)
library(EasyEDA)
remove.packages("EasyEDA")
library(EasyEDA)
library(EasyEDA)
library(EasyEDA)
library(EasyEDA)
library(EasyEDA)
